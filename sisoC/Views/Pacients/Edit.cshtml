@model sisoC.Models.Pacient

@{
    ViewBag.Title = "Editar";
}

<h2>Editar Registro</h2>


@using (Html.BeginForm("Edit", "Pacients", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Pacientes</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.PacientID)
    @Html.HiddenFor(model => model.DocumentTypeID)
    @Html.HiddenFor(model => model.GenderID)
    @Html.HiddenFor(model => model.CivilID)
    @Html.HiddenFor(model => model.FactorRhID)
    @Html.HiddenFor(model => model.SchoolLevelID)
    @Html.HiddenFor(model => model.ProfessionID)
    @Html.HiddenFor(model => model.MilitaryServiceID)
    @Html.HiddenFor(model => model.DriveLicenseID)
    @Html.HiddenFor(model => model.StateID)
    @Html.HiddenFor(model => model.CityID)
    @Html.HiddenFor(model => model.EpsaID)
    @Html.HiddenFor(model => model.ArprID)
    @Html.HiddenFor(model => model.AfpeID)
    @Html.HiddenFor(model => model.Photo)
    @Html.HiddenFor(model => model.Firm)

    <div class="container-fluid">
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.DocumentTypeID, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-8">
                        @Html.DropDownList("DocumentTypeID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DocumentTypeID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Document, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Document, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Document, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.GenderID, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-8">
                        @Html.DropDownList("GenderID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.GenderID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.BirthDay, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-10">
                        <div class='input-group date' id='datepicker' style="width:280px">
                            @Html.EditorFor(model => model.BirthDay, new { htmlAttributes = new { @class = "form-control" } })
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                        @Html.ValidationMessageFor(model => model.BirthDay, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.BirthPlace, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.BirthPlace, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BirthPlace, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.CivilID, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-8">
                        @Html.DropDownList("CivilID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CivilID, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Family, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Family, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Family, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>
        </div>
    </div>
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.FactorRhID, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-8">
                        @Html.DropDownList("FactorRhID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.FactorRhID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.SchoolLevelID, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-8">
                        @Html.DropDownList("SchoolLevelID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SchoolLevelID, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.ProfessionID, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-8">
                        @Html.DropDownList("ProfessionID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ProfessionID, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>
        </div>
    </div>
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.TimeProfession, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.TimeProfession, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TimeProfession, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Possition, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Possition, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Possition, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.OldMount, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.OldMount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OldMount, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>
        </div>
    </div>
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.OldYear, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.OldYear, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OldYear, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.MilitaryServiceID, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-8">
                        @Html.DropDownList("MilitaryServiceID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.MilitaryServiceID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.DriveLicenseID, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-8">
                        @Html.DropDownList("DriveLicenseID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DriveLicenseID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.StateID, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-8">
                        @Html.DropDownList("StateID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.StateID, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.CityID, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-8">
                        @Html.DropDownList("CityID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CityID, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>
        </div>
    </div>
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Movil1, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Movil1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Movil1, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Movil2, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Movil2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Movil2, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>
        </div>
    </div>
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.EMail, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.EMail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EMail, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.EpsaID, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-8">
                        @Html.DropDownList("EpsaID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.EpsaID, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.ArprID, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-8">
                        @Html.DropDownList("ArprID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ArprID, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>
        </div>
    </div>
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.AfpeID, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-8">
                        @Html.DropDownList("AfpeID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AfpeID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.PhotoFile, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-md-10">
                        <div class="file-input-new">
                            <div class="input-group" style="width:280px">
                                <div tabindex="500" class="form-control file-caption">
                                    <div class="file-caption-name" id="NombreArchivo"></div>
                                </div>
                                <div class="input-group-btn" style="height:auto">
                                    <div tabindex="500" class="btn btn-primary btn-file">
                                        <i class="glyphicon glyphicon-folder-open"></i>
                                        File Search...
                                        @Html.TextBoxFor(modelo => modelo.PhotoFile, new { type = "file", id = "files" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.FirmFile, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-md-10">
                        <div class="file-input-new">
                            <div class="input-group" style="width:280px">
                                <div tabindex="500" class="form-control file-caption">
                                    <div class="file-caption-name" id="NombreArchivo"></div>
                                </div>
                                <div class="input-group-btn" style="height:auto">
                                    <div tabindex="500" class="btn btn-primary btn-file">
                                        <i class="glyphicon glyphicon-folder-open"></i>
                                        File Search...
                                        @Html.TextBoxFor(modelo => modelo.FirmFile, new { type = "file", id = "files" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Grabar Registro" class="btn btn-primary btn-lg" />
                @Html.ActionLink("Regresar", "Index", new { }, new { @class = "btn btn-success btn-lg" })
            </div>
        </div>
    </div>
</div>
}



 @section Scripts {
   @Scripts.Render("~/bundles/jqueryval")
   <script type="text/javascript">
       var Url = '@Url.Action("GetCities", "Generic")';
       
       $(function () {
         $('#datepicker').datetimepicker({ format: 'YYYY/MM/DD' });
        });
    </script>
}
