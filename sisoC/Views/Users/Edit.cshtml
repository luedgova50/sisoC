@model sisoC.Models.Users

@{
    ViewBag.Title = "Editar";
}

<h2>Editar Registro</h2>


@using (Html.BeginForm("Edit", "Users", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Usuarios</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.UsersID)

        <h1>Datos Básicos del Usuario a Editar</h1>
        <table style="width: 100%">
            <colgroup>
                <col style="width: 25%" />
                <col style="width: 25%" />
                <col style="width: 25%" />
                <col style="width: 25%" />
            </colgroup>
            <tr>
                <th>
                    @Html.LabelFor(model => model.DocumentTypeID, htmlAttributes: new { @class = "control-label" })
                </th>
                <th>
                    @Html.LabelFor(model => model.Document, htmlAttributes: new { @class = "control-label" })
                </th>
                <td>
                    @Html.LabelFor(model => model.UserName, new { @class = "control-label" })
                </td>
                <th>
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                </th>

            </tr>
            <tr>
                <td>
                    @Html.DropDownList("DocumentTypeID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DocumentTypeID, "", new { @class = "text-danger" })
                </td>

                <td>
                    @Html.EditorFor(model => model.Document, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Document, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </td>
            </tr>
        </table>
        <table style="width: 100%">
            <colgroup>
                <col style="width: 25%" />
                <col style="width: 25%" />
                <col style="width: 25%" />
                <col style="width: 25%" />
            </colgroup>
            <tr>
                <th>
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                </th>
                <th>
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                </th>
                <td>
                    @Html.LabelFor(model => model.StateID, htmlAttributes: new { @class = "control-label" })
                </td>
                <th>
                    @Html.LabelFor(model => model.CityID, htmlAttributes: new { @class = "control-label" })
                </th>

            </tr>
            <tr>
                <td>
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </td>

                <td>
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.DropDownList("StateID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.StateID, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.DropDownList("CityID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CityID, "", new { @class = "text-danger" })
                </td>
            </tr>
        </table>
        <table style="width: 100%">
            <colgroup>
                <col style="width: 25%" />
                <col style="width: 25%" />
                <col style="width: 25%" />
                <col style="width: 25%" />
            </colgroup>
            <tr>
                <th>
                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
                </th>
                <th>
                    @Html.LabelFor(model => model.Movil1, htmlAttributes: new { @class = "control-label" })
                </th>
                <td>
                    @Html.LabelFor(model => model.Movil2, htmlAttributes: new { @class = "control-label" })
                </td>
                <th>
                    @Html.LabelFor(model => model.EMail, htmlAttributes: new { @class = "control-label" })
                </th>

            </tr>
            <tr>
                <td>
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </td>

                <td>
                    @Html.EditorFor(model => model.Movil1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Movil1, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.EditorFor(model => model.Movil2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Movil2, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.EditorFor(model => model.EMail, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EMail, "", new { @class = "text-danger" })
                </td>
            </tr>
        </table>
        <table style="width: 100%">
            <colgroup>
                <col style="width: 25%" />
                <col style="width: 25%" />
                <col style="width: 25%" />
                <col style="width: 25%" />
            </colgroup>
            <tr>
                <th>
                    @Html.LabelFor(model => model.PhotoUsersFile, htmlAttributes: new { @class = "control-label" })
                </th>
                <th>
                    @Html.LabelFor(model => model.FirmUsersFile, htmlAttributes: new { @class = "control-label" })
                </th>
                <td></td>
                <th>

                </th>

            </tr>
            <tr>
                <td>
                    <div class="file-input-new">
                        <div class="input-group" style="width:280px">
                            <div tabindex="500" class="form-control file-caption">
                                <div class="file-caption-name" id="NombreArchivo">
                                </div>
                            </div>
                            <div class="input-group-btn" style="height:auto">
                                <div tabindex="500" class="btn btn-primary btn-file">
                                    <i class="glyphicon glyphicon-folder-open"></i>
                                    File Search...
                                    @Html.TextBoxFor(modelo => modelo.PhotoUsersFile, new { type = "file", id = "files" })
                                </div>
                            </div>
                        </div>
                    </div>
                </td>

                <td>
                    <div class="file-input-new">
                        <div class="input-group" style="width:280px">
                            <div tabindex="500" class="form-control file-caption">
                                <div class="file-caption-name" id="NombreArchivo">
                                </div>
                            </div>
                            <div class="input-group-btn" style="height:auto">
                                <div tabindex="500" class="btn btn-primary btn-file">
                                    <i class="glyphicon glyphicon-folder-open"></i>
                                    File Search...
                                    @Html.TextBoxFor(modelo => modelo.FirmUsersFile, new { type = "file", id = "files" })
                                </div>
                            </div>
                        </div>
                    </div>
                </td>
                <td>
                    <input type="submit" value="Grabar Registro" class="btn btn-primary btn-lg" />
                </td>
                <td>
                    @Html.ActionLink("Regresar", "Index", new { }, new { @class = "btn btn-success btn-lg" })
                </td>
            </tr>
        </table>

        
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
        <script type="text/javascript">
             var Url = '@Url.Action("GetCities", "Generic")';
        </script>
}
