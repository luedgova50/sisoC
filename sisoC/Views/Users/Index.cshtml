@model PagedList.IPagedList<sisoC.Models.Users>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Usuarios";
}

<h2>Listado de Usuarios</h2>

<p>
    @Html.ActionLink("Crear Nuevo Registro", "Create", new { }, new { @class = "btn btn-primary btn-lg" })
</p>
<table class="table table-bordered table-hover">
    <tr>
        
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().DocumentType.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Document)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().UserName)
        </th>        
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().FullName)
        </th>       
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().PhotoUsers)
        </th>        
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            
            <td>
                @Html.DisplayFor(modelItem => item.DocumentType.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Document)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserName)
            </td>
            
            <td>
                @Html.DisplayFor(modelItem => item.FullName)
            </td>           
            
            <td>
                <img src="@Url.Content(item.PhotoUsers)" alt="Image" style="width:100px;height:150px;max-width: 100%; height: auto;" />
            </td>
            
            <td>
                @Html.ActionLink("Editar", "Edit", new { id = item.UsersID }, new { @class = "btn btn-warning" }) |
                @Html.ActionLink("Detalles", "Details", new { id = item.UsersID }, new { @class = "btn btn-info" }) |
                @Html.ActionLink("Eliminar", "Delete", new { id = item.UsersID }, new { @class = "btn btn-danger" })
            </td>
        </tr>
    }

</table>
Página: @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber), de: @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index", new
{
    page,
    sortOrder =
    ViewBag.CurrentSort,
    currentFilter = ViewBag.CurrentFilter
}))